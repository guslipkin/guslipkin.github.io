{
  "hash": "d5a8b6b36786180b55af1063ac998def",
  "result": {
    "markdown": "---\ntitle: \"Grouped and Stacked Bar Charts in R\"\ndescription: \"Using R and ggplot2 to create stacked and grouped column charts\"\nimage: \"../assets/post-assets/2022-02-16-grouped-and-stacked-bar-charts-in-r/stackAndDodge.png\"\nauthor: \"Gus Lipkin\"\ndate: \"2022/02/16\"\ncategories:\n  - R\n  - \"R: tidyverse\"\n  - \"R: ggplot2\"\nformat:\n  html:\n    theme: default\n    toc: true\n---\n\n\n[*Link to the Medium post*](https://medium.com/@guslipkin/grouped-and-stacked-bar-charts-in-r-e5f5ac5637de)\n\n# Intro \n\nSometimes you have a chart that looks like one of these. You have a grouped chart that shows one thing and a stacked chart that shows another. But you really want to show the continent of origin and the condition in one chart.\n\n::: {#fig-grouped-stacked layout-ncol=2}\n\n![A grouped bar chart](../assets/post-assets/2022-02-16-grouped-and-stacked-bar-charts-in-r/group.png){#fig-grouped}\n\n![A stacked bar chart](../assets/post-assets/2022-02-16-grouped-and-stacked-bar-charts-in-r/stack.png){#fig-stacked}\n\nA grouped bar chart and a stacked bar chart\n:::\n\nMaybe the chart you want looks a lot like this:\n\n![The chart that we will learn to build](../assets/post-assets/2022-02-16-grouped-and-stacked-bar-charts-in-r/stackAndDodge.png){alt=\"A grouped and stacked bar chart\"}\n\n----\n\n# Creating the Data\n\nFirst we load `ggplot2` so we can make our charts. Then we make some data and preview it. `set.seed(2022)` makes sure that our data is the same every time.\n\n\n::: {.cell hash='2022-02-16-grouped-and-stacked-bar-charts-in-r_cache/html/unnamed-chunk-1_1fab3111b5463155af50f4a6491a8794'}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\nset.seed(2022)\nspecie <- c(rep(\"sorgho\", 6), rep(\"poacee\", 6), \n            rep(\"banana\", 6), rep(\"triticum\", 6))\ncondition <- rep(c(\"normal\" , \"stress\" , \"N2\") , 8)\ncontinent <- rep(c(\"Europe\", \"Africa\", \"Asia\", \"South America\",          \n                   \"North America\", \"Australia\"), 4)\nvalue <- abs(rnorm(24 , 0 , 15))\ndata <- data.frame(specie, condition, continent, value)\nhead(data)\n```\n:::\n\n<center><em style=\"color: grey;\">Creating the data</em></center>\n\n||**specie**|**condition**|**continent**|**value**\n|:-----:|:-----:|:-----:|:-----:|:-----:\n1|sorgho|normal|Europe|33.2982559377826\n2|sorgho|stress|Africa|7.4199245988712\n3|sorgho|N2|Asia|52.3689859681817\n4|sorgho|normal|South America|4.85975695583929\n5|sorgho|stress|North America|6.84424418650998\n6|sorgho|N2|Australia|6.74199859289553\n\n<center><em style=\"color: grey;\">Previewing the data</em></center>\n\n----\n\n# Not Quite Right\n\nOur first instinct might be to throw both charts together using `grid.arrange` from the `gridextra` package. While this does show the information we want, it’s not pretty and doesn’t show the data the way we want it to.\n\n\n::: {.cell fig.caption='Two plots graphed together with `gridExtra::grid.arrange()`' alt-text='A grouped chart and a stacked chart on top of each other' hash='2022-02-16-grouped-and-stacked-bar-charts-in-r_cache/html/unnamed-chunk-2_054e2494685ef58ecd5feec81c7dc216'}\n\n```{.r .cell-code}\none <- ggplot(data) +\n  geom_bar(aes(x = specie, y = value, fill = condition), \n           position = \"dodge\", stat = \"identity\")\ntwo <- ggplot(data) +\n  geom_bar(aes(x = specie, y = value, fill = continent), \n           position = \"stack\", stat = \"identity\")\ngridExtra::grid.arrange(one, two, nrow = 2)\n```\n\n::: {.cell-output-display}\n![](2022-02-16-grouped-and-stacked-bar-charts-in-r_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\nNot sure what to do, we come up with lots of plots that are almost right, but not quite.\n\n::: {#fig-three-not-right layout-ncol=3}\n\n![](../assets/post-assets/2022-02-16-grouped-and-stacked-bar-charts-in-r/groupDodge.png){#fig-groupDodge alt=\"A grouped bar chart and stacked bar chart without labels\"}\n\n![](../assets/post-assets/2022-02-16-grouped-and-stacked-bar-charts-in-r/interaction.png){#fig-interaction alt=\"A stacked bar chart with interaction labels\"}\n\n![](../assets/post-assets/2022-02-16-grouped-and-stacked-bar-charts-in-r/facetWrap.png){#fig-factWrap alt=\"Four stacked bar charts in a 2x2 grid\"}\n\nThree attempts at making a grouped and stacked bar chart\n:::\n\n\nThe last one looks like it could be promising. How did we do it?\n\n\n::: {.cell hash='2022-02-16-grouped-and-stacked-bar-charts-in-r_cache/html/unnamed-chunk-3_58dd67bec8d604e26242ca56dbfe0486'}\n\n```{.r .cell-code}\nggplot(data) +\n  geom_bar(aes(x = condition, y = value, fill = continent),\n           position = \"stack\",\n           stat = \"identity\") +\n  facet_wrap(~ specie)\n```\n:::\n\n\nWe use `ggplot` to set up the pipeline, `geom_bar` to create the bar chart, and then `facet_wrap` is what gives us the four separate charts in one, with one mini-chart for each species. If we can move the charts to be side-by-side, we’ll be a lot closer to the desired outcome. We can use `facet_grid` instead of `facet_wrap` to accomplish that.\n\n\n::: {.cell alt-text='Four stacked bar charts side-by-side' hash='2022-02-16-grouped-and-stacked-bar-charts-in-r_cache/html/unnamed-chunk-4_63e450c9fa440e7a0c97dbdb6e322afc'}\n\n```{.r .cell-code}\nggplot(data) +\n  geom_bar(aes(x = condition, y = value, fill = continent),\n           position = \"stack\",\n           stat = \"identity\") +\n  facet_grid(~ specie)\n```\n\n::: {.cell-output-display}\n![Using facet_grid() to show multiple plots next to each other](2022-02-16-grouped-and-stacked-bar-charts-in-r_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nThis looks much better, but we want it to look like one cohesive plot, rather than four smaller plots.\n\n----\n\n# The Final Product\n\nI'm going to show you the code that does it, then walk through it so everything makes sense.\n\n\n::: {.cell alt-text='A grouped and stacked bar chart' hash='2022-02-16-grouped-and-stacked-bar-charts-in-r_cache/html/unnamed-chunk-5_cfbed9c22dc3063516bf0906a4ed246b'}\n\n```{.r .cell-code}\nggplot(data) +\n  geom_bar(aes(x = condition, y = value, fill = continent),\n           position = \"stack\",\n           stat = \"identity\") +\n  facet_grid(~ specie, switch = \"x\") +\n  theme(strip.placement = \"outside\",\n        strip.background = element_rect(fill = NA, color = \"white\"),\n        panel.spacing = unit(-.01,\"cm\"))\n```\n\n::: {.cell-output-display}\n![The graph that we came here for](2022-02-16-grouped-and-stacked-bar-charts-in-r_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\nThis looks pretty good and is exactly what we wanted. Like the charts before, we get 90% of the way there with `ggplot`, `geom_bar`, and `facet_grid`. The additions here are the `switch = \"x\"` argument in `facet_grid`, which moves the group panel with the species from the top of the chart to the bottom. Moving the `strip.placement` outside makes sure that the conditions are listed between the species and the chart. Making `strip.background` empty with a white border allows the group panel with the species to blend in with the white background of the chart. Lastly, changing the `panel.spacing` to `-.01` removes the small gap between each panel so that the chart appears to be one cohesive unit.\n\n----\n\nThe code for all the charts in this article is available [here](https://gist.github.com/guslipkin/76da4207fcee7bcdea6707ecc1f4b9fa?file=allTogether.rmd). If you want to see more from me, check out [my GitHub](https://github.com/guslipkin) or [guslipkin.github.io](https://guslipkin.github.io). If you want to hear from me, I'm also on Twitter [@guslipkin](https://twitter.com/GusLipkin).\n\n\n<center><em>Gus Lipkin is a Data Scientist, Business Analyst, and occasional bike mechanic</em></center>\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}