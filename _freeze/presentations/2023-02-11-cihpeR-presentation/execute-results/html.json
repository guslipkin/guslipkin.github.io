{
  "hash": "6c54f0ad54ac688d757f6778b788b814",
  "result": {
    "markdown": "---\ntitle: \"cipheR ðŸ“¦\"\nauthor: \"Gus Lipkin\"\ndate: \"2022-10-29\"\nformat: \n  revealjs:\n    theme: default\n    controls: true\n    self-contained: true\n---\n\n\n## What is cipheR and why?\n\n- `cihpeR` is a package for simple text ciphers.\n  - A cipher is text that has been transformed by some method with the intention of hiding its meaning\n\n- I made it because I needed a flexible [Caesar Cipher](https://en.wikipedia.org/wiki/Caesar_cipher) for [Advent of Code](https://adventofcode.com/)\n\nTo install from CRAN\n\n\n::: {.cell hash='2023-02-11-cihpeR-presentation_cache/revealjs/unnamed-chunk-1_711f00ef52580ca7fda7797521179c44'}\n\n:::\n\n\n\n## What I'm hoping you learn\n\n- Some cool new text ciphers perfect for passing notes in class\n- Base R methods to deal with text\n- Writing speedy code with `apply` and vectorization\n\n## What I'm hoping to get feedback on\n\n- Error handling (and if we have time, testing)\n- UX",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}