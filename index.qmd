---
title: "Hi There ðŸ‘‹"
format:
  html:
    toc-title: Selected Projects
    toc: true
    toc-location: right
execute: 
  enabled: true
  cache: false
  freeze: false
$enable-grid-classes: false
$enable-cssgrid: true
---

<style>
  code { white-space: normal; }
</style>

<center><img src="/assets/gus_headshot_new.jpg" style="max-width: 40%;"/></center>
<br>

Iâ€™ve always loved asking â€˜how?â€™ and â€˜why?â€™ Since starting my journey as a data scientist, Iâ€™ve been able to answer â€˜how?â€™ by developing tools to support my teammates, while answering â€˜why?â€™ with analyses to support data driven decision making. Iâ€™m looking for a position where I can build a career using my skills to help my team and conduct meaningful analyses that inform business decisions and contribute to achieving company goals.

If you want to learn more about me, feel free to poke around my site or [contact me directly](contact.html). You can also find [me on LinkedIn](https://www.linkedin.com/in/guslipkin/), Fosstodon <a href="https://fosstodon.org/@guslipkin">@guslipkin</a> or on Medium also <a href="https://guslipkin.medium.com">@guslipkin</a>. In addition, all my personal projects are public [on GitHub](https://github.com/guslipkin).

----

::: {.column-page}
## Selected Projects
:::
::: {.grid .column-page}
::: {.g-col-12 .g-col-sm-6 .d-grid}
::: {.g-col-12}
### [AEDify ![](https://static.wixstatic.com/media/b716a8_6e6e8e16396a4989a2bd4b01f4cc1f42~mv2.jpg/v1/fill/w_156,h_133,al_c,q_80,usm_0.66_1.00_0.01,enc_avif,quality_auto/aedify.jpg){height=40}](https://www.landeranalytics.com/aedify)
:::
::: {.g-col-12 .text-wrap}
- **What:** A custom occupancy forecasting tool leveraging AI and machine learning technologies to help inform building operations decisions allowing for significant operational adjustments turned cost savings
- **Why:** We at [Lander Analytics](https://www.landeranalytics.com) saw a need in the building management field
- **[How](https://github.com/guslipkin/ClimbWith):** `R: {shiny, bslib, leaflet}`, `Python`, `prefect`, `MLflow`, `PostGIS`
- **Conclusion:** Check it out at [Lander Analytics](https://www.landeranalytics.com/aedify)!
:::
:::
::: {.g-col-12 .g-col-sm-6 .d-grid}
::: {.g-col-12}
### Consulting
:::
::: {.g-col-12 .text-wrap}
- **What:** That's up to you!
- **Why:** I have a lot to offer you and your company in a variety of fields.
- **How:** If you'd like to work with me but, you're not sure where I might fit in, this page and [my rÃ©sumÃ©](resume.html) are a great place to start
- **Conclusion:** It's time to [contact me](contact.html) and get the ball rolling!
:::
:::
:::

::: {.column-page}
### Shiny for R
:::
::: {.grid .column-page}
::: {.g-col-12 .g-col-sm-6 .d-grid}
::: {.g-col-12}
#### [{ClimbWith} ![](https://raw.githubusercontent.com/guslipkin/ClimbWith/main/inst/app/www/favicon.ico){height=40}](https://climbwith.info/)
:::
::: {.g-col-12 .text-wrap}
- **What:** A climbing gym directory made in R Shiny.
- **Why:** I wanted to know which gyms near me had which [Standardized Interactive Climbing Training Board](https://gearjunkie.com/climbing/kilter-moon-grasshopper-more-interactive-climbing-training-boards-explained) and there was no easy way to find that information already.
- **[How](https://github.com/guslipkin/ClimbWith):** `R: {shiny, bs4Dash, leaflet, DT}`
- **Conclusion:** Check it out at [climbwith.info](https://climbwith.info)!
:::
:::
::: {.g-col-12 .g-col-sm-6 .d-grid}
::: {.g-col-12}
#### [{jotto}](https://jotto.guslipkin.me)
:::
::: {.g-col-12 .text-wrap}
- **What:** A fun little word game where you try to guess the five letter words
- **Why:** I was introduced to the game during a game night and had some time to kill the next night
- **[How](https://github.com/guslipkin/jotto):** `R: {shiny, bslib, golem}`, `[SCOWL](http://wordlist.aspell.net/)`
- **Conclusion:** It's a fun little game with difficulty from Easy to Scrabble, and beyond!
:::
:::
:::

::: {.column-page}
### R Packages
:::
::: {.grid .column-page}
::: {.g-col-12 .g-col-sm-6 .d-grid}
::: {.g-col-12}
#### [{cipheR} ![](https://raw.githubusercontent.com/guslipkin/cipheR/main/pkgdown/favicon/apple-touch-icon.png){height=40}](https://guslipkin.github.io/cipheR/)
:::
::: {.g-col-12 .d-flex .align-items-start}
- **What:** An R library for simple text ciphers.
- **Why:** I needed a Caesar Shift for an [Advent of Code](https://guslipkin.github.io/AdventOfCode/) puzzle and got a bit carried away!
- **[How](https://github.com/guslipkin/cipher):** `R`
- **Conclusion:** Check it out on [CRAN](https://cran.r-project.org/package=cipheR) or [watch me present](/presentations/2023-02-11-cipheR-page.html) it!
:::
:::
::: {.g-col-12 .g-col-sm-6 .d-grid}
::: {.g-col-12}
#### [{dewey} ![](https://raw.githubusercontent.com/guslipkin/dewey/main/pkgdown/favicon/apple-touch-icon.png){height=40}](https://guslipkin.github.io/dewey/)
:::
::: {.g-col-12}
- **What:** A collection of useful `R` functions for data analysis.
- **Why:** There were some things I wanted to do and they didn't exist yet, so I made them.
- **[How](https://github.com/guslipkin/dewey):** `R: {data.table, parallel, pkgdown, stats}`
- **Conclusion:** Development is difficult, but I'm proud of it and it's super useful.
:::
:::
:::

::: {.column-page}
### Programming Puzzles
:::
::: {.grid .column-page}
::: {.g-col-12 .g-col-sm-6 .d-grid}
::: {.g-col-12}
#### [Advent of Code](https://guslipkin.github.io/AdventOfCode/)
:::
::: {.g-col-12 .text-wrap}
- **What:** A series of programming puzzles to help save Christmas.
- **Why:** Christmas must be saved! But also, it's a lot of fun and requires a variety of different solution styles.
- **[How](https://github.com/guslipkin/AdventOfCode):** `R: {`[`mistlecode`](https://guslipkin.github.io/mistlecode/)`, *puzzle dependent* }`, `Quarto`
- **Conclusion:** I highly recommend joining if you like a good challenge.
:::
:::
::: {.g-col-12 .g-col-sm-6 .d-grid}
::: {.g-col-12}
#### [{mistlecode}](https://guslipkin.github.io/mistlecode/)
:::
::: {.g-col-12}
- **What:** Help me (or you!) out a bit with Advent of Code.
- **Why:** A lot of puzzles are very similar and you can get ahead of the competition by building general solutions.
- **[How](https://github.com/guslipkin/dewey):** `R: {tidyverse, data.table, R6, and more!}`
- **Conclusion:** Development is difficult, but I'm proud of it and it's super useful
:::
:::
:::

::: {.column-page}
### Other Projects
:::
::: {.grid .column-page}
::: {.g-col-12 .g-col-sm-6 .d-grid}
::: {.g-col-12}
#### [Gus' Good Spreadsheet Guide](../presentations/spreadsheet_guide.html)
:::
::: {.g-col-12 .text-wrap}
- **What:** A slideshow with guidelines for high quality spreadsheets</li>
- **Why:** Sometimes people ask for help with spreadsheets and it's easier to help with consistent design
- **How:** `Microsoft PowerPoint`
- **Conclusion:** While it is by no means exhaustive, it's a good start and I hope someone finds it useful
:::
:::
::: {.g-col-12 .g-col-sm-6 .d-grid}
::: {.g-col-12}
#### [Cat Simulator 2019](../presentations/cat_simulator_2019.html)
:::
::: {.g-col-12}
- **What:** Can we make a game that teaches basic Bash commands?
- **Why:** It's a final project for COP 3353C â€“ Introduction to Unix.</li>
- **[How](https://github.com/guslipkin/Lark):** `Bash`
- **Conclusion:** It's lots of fun. I highly recommend it!
:::
:::
:::

```{r}
#| echo: false
#| output: false
source("post-packages.R")

cat("guslipkin.me", file = "docs/CNAME")
# file.copy("talks", "docs", recursive = TRUE)
```

```{r}
#| eval: false
#| echo: false
#| output: false
y <- yaml::read_yaml("_quarto.yml")
if (is.null(y[["quarto-version"]])) {
  y[["quarto-version"]] <- paste0('>=', quarto::quarto_version())
} else {
  cur_ver <-
    y[["quarto-version"]] |>
    strsplit("[\\.<>=]") |>
    unlist()
  cur_ver <- as.integer(cur_ver[cur_ver != ""])
  quarto_ver <- 
    quarto::quarto_version() |>
    as.character() |>
    strsplit("\\.") |>
    unlist() |>
    as.integer()
  if (all(quarto_ver >= cur_ver)) { 
    y[["quarto-version"]] <- paste0('>=', quarto::quarto_version())
  }
}
yaml::write_yaml(
  y, 
  "_quarto2.yml", 
  handlers = list(
    logical = \(x) {
      x <- ifelse(x, "true", "false")
      class(x) <- "verbatim"
      return(x)
    }
  )
)
```

